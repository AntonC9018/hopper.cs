<#  foreach (var chain in behavior.Chains) 
    { #>
        public readonly Chain<Context> _<#= chain.Name #>Chain;

        /// <summary>
        /// Retrieves the <#= chain.Name #> chain from the <#= behavior.ClassName #> behavior of the given entity / entity factory.
        /// </summary>
        public static readonly ChainPath<Chain<Context>> <#= chain.Name #>Path = new ChainPath<Chain<Context>>(
            (Entity entity) => entity.TryGetComponent(Index, out var component) ? component._<#= chain.Name #>Chain : null);

<#  }
    if (behavior.ShouldGenerateAutoActivation) 
    { #>
        public bool Activate(<#= behavior.Context.JoinedParamsWithActor() #>)
        {
            Context ctx = new Context
            {
<#      if (behavior.Context.IsActorAField)
        { #>
                <#= behavior.Context.ActorName #> = <#= behavior.Context.ActorName #>,
<#      }
        foreach (var name in behavior.Context.ParamNames()) 
        { #>
                <#= name #> = <#= name #>,
<#      } #>
            };
            return _CheckDo(ctx);
        }

<#  }
    // This one is useful though, plus it's private 
    if (behavior.ShouldGenerateCheckDo) 
    { #>
        private bool _CheckDo(Context ctx)
        {
            if (_CheckChain.PassWithPropagationChecking(ctx)) 
            {
                _DoChain.PassWithPropagationChecking(ctx);
                return true;
            }
            return false;
        }
<# } #>